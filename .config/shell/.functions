#!/bin/bash

function usage() {
    du "$1" -ah --max-depth=1 2>/dev/null | sort -rh
}

function co() {
    dir=$(find "$HDD/Code" -maxdepth 1 -type d,l | awk -F/ '{ print $NF }'| fzf)
    [ -z "$dir" ] || cd "$HDD/Code/$dir" || exit
}

function conf() {
    find "$HDD/Code/dotfiles/" -type f | grep -vi '\.git\|watch_later\|autoload\|pycache\|fonts' | \
        sed "s|^"$HDD"/Code/dotfiles/||" | fzf | xargs -I'{}' -r $EDITOR $HDD/Code/dotfiles/{}
}

function fzfcd() {
    dir=$(find -L . -maxdepth 3 -path './.*' -o -fstype 'sysfs' -o -fstype 'devfs' -o -fstype \
        'devtmpfs' -o -fstype 'proc' -prune -o -type d,l  -print 2>/dev/null | cut -b3- | fzf)
    [ -z "$dir" ] || cd "$dir" || exit
}

function fzfcdhidden() {
    dir=$(find -L . -maxdepth 3 -path '.' -o -fstype 'sysfs' -o -fstype 'devfs' -o -fstype \
        'devtmpfs' -o -fstype 'proc' -prune -o -type d,l  -print 2>/dev/null | cut -b3- | fzf)
    [ -z "$dir" ] || cd "$dir" || exit
}

function open() {
    find . -type f -maxdepth 3 2>/dev/null | grep -vi \
        '\.git\|\.miniconda3\|\.android\|\.cache\|\.librewolf\|watch_later\|autoload\|pycache\|fonts\|tags' \
        | fzf | xargs -r "$EDITOR"
}

function pipup() {
    pip list --outdated | tail -n +3 | tee /dev/tty | awk '{print $ 1}' | \
        xargs -r -I'{}' pip install --upgrade {} || true
}

function lspacs() {
    pacman -Qi | awk '/^Name/{name=$ 3} /^Installed Size/{print $4 $5, name}' | sort -hr
}

function pacusage() {
    # https://serverfault.com/questions/375096/bash-sed-awk-etc-remove-every-other-newline/375104
    pacman -Qi | grep -E '^(Name|Installed)' | cut -f2 -d':' | paste - - | \
        sed 's/^ //g; s/ K/K/g; s/ M/M/g' | tr -d '\t' | sort -rhk 2 | less
}

function lsalias() {
    alias | awk -F'[ =]' '{ print $2 }' | tr -d "'"
}

function condainit() {
    export PATH="/home/jedi/.miniconda3/bin:$PATH"
    __conda_setup="$('/home/jedi/.miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
    [[ "$?" -eq 0 ]] && echo "$__conda_setup" | eval
    unset __conda_setup
}

function yta() {
    mpv --loop --ytdl-format=bestaudio ytdl://ytsearch:"$*"
}

function countdown() {
    date1=$(($(date +%s) + $1));
    while [ "$date1" -ge "$(date +%s)" ]; do
        echo -ne "$(date -u --date @$((date1 - $(date +%s))) +%H:%M:%S)\r";
        sleep 0.1
    done
}

function stopwatch() {
    date1=$(date +%s);
    while true; do
        echo -ne "$(date -u --date @$(($(date +%s) - date1)) +%H:%M:%S)\r";
        sleep 0.1
    done
}


bindkey -s '^h' 'conf\n'
bindkey -s '^k' 'open\n'
bindkey -s '^f' 'fzfcd\n'
bindkey -s '^g' 'fzfcdhidden\n'
