#!/bin/bash

usage() {
    du "$1" -ah --max-depth=1 2>/dev/null | sort -rh
}

co() {
    cd $(ls "$HDD/Code" | fzf | sed "s|^|"$HDD"/Code/|")
}

conf() {
    find $HDD/Code/dotfiles/ -type f | grep -vi '.git\|watch_later\|autoload\|pycache\|fonts' | fzf | xargs -r $EDITOR
}

pipup() {
    pip3 list --outdated | tail -n +3 | tee /dev/tty | awk '{print $ 1}' | xargs -r -i'{}' doas pip3 install --upgrade {} || true
}

lspacs() {
    pacman -Qi | awk '/^Name/{name=$ 3} /^Installed Size/{print $4 $5, name}' | sort -hr
}

lsalias() {
    alias | awk -F'[ =]' '{ print $2 }' | tr -d "'"
}

pacusage() {
    # https://serverfault.com/questions/375096/bash-sed-awk-etc-remove-every-other-newline/375104
    pacman -Qi | egrep '^(Name|Installed)' | cut -f2 -d':' | paste - - | sed 's/^ //g; s/ K/K/g; s/ M/M/g' | tr -d '\t' | sort -rhk 2 | less
}

countdown(){
    date1=$((`date +%s` + $1)); 
    while [ "$date1" -ge `date +%s` ]; do 
     echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
     sleep 0.1
    done
}

stopwatch() {
    date1=`date +%s`; 
    while true; do 
        echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r"; 
        sleep 0.1
    done
}
